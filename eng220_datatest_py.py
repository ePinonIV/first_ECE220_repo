# -*- coding: utf-8 -*-
"""eng220_datatest.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gZLD3KsrQUIy9pargVPX6PZvUagAYREz
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set the page title
st.title("CSV Data Visualization App")

# Allow the user to upload four CSV files
uploaded_files = []
for i in range(4):
    uploaded_file = st.file_uploader(f"Upload CSV File {i+1}", type=["csv"], key=f"file_uploader_{i}")
    if uploaded_file:
        uploaded_files.append(pd.read_csv(uploaded_file))

# Display uploaded data and graphs
if uploaded_files:
    for i, df in enumerate(uploaded_files):
        st.subheader(f"Dataset {i+1}")

        # Display the data frame
        st.write("### Data Preview", df.head())

        # Display basic statistics
        st.write("### Summary Statistics")
        st.write(df.describe())

        # Select columns for visualization
        numeric_cols = df.select_dtypes(include=['float64', 'int64']).columns
        if len(numeric_cols) > 1:
            col1 = st.selectbox(f"Select X-axis for Dataset {i+1}", numeric_cols, key=f"x_axis_{i}")
            col2 = st.selectbox(f"Select Y-axis for Dataset {i+1}", numeric_cols, key=f"y_axis_{i}")

            # Choose the plot type
            plot_type = st.radio(f"Select plot type for Dataset {i+1}", ('Scatterplot', 'Lineplot', 'Barplot'), key=f"plot_type_{i}")

            # Create the plot
            plt.figure(figsize=(10, 6))
            if plot_type == 'Scatterplot':
                sns.scatterplot(data=df, x=col1, y=col2)
            elif plot_type == 'Lineplot':
                sns.lineplot(data=df, x=col1, y=col2)
            elif plot_type == 'Barplot':
                sns.barplot(data=df, x=col1, y=col2)

            plt.title(f"{plot_type} of {col1} vs {col2}")
            st.pyplot(plt)

        else:
            st.write("### Not enough numeric columns for visualization")

else:
    st.write("Please upload at least one CSV file to start.")